{"version":3,"sources":["actions.js","config.js","components/ImageContainer.js","components/GifBox.js","actions/gifActions.js","apis/searchAPI.js","actions/searchActions.js","components/GifTable.js","util/pathHelper.js","views/Home.js","views/Favorites.js","components/SearchBox.js","components/Header.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/searchReducer.js","reducers/gifReducer.js","index.js","store.js"],"names":["SEARCH_ACTIONS","UPDATE_SEARCH_VALUE","INCREMENT_PAGE_NUMBER","CLEAR_PAGE_NUMBER","GIF_DATA_ACTIONS","SEARCH_GIFS","APPEND_GIFS","FAV_GIF","BASE_URL","GIPHY_API_KEY","PASTEL_COLORS","ImageContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleImageLoaded","setState","loaded","state","_this$props","source","altText","randomColor","Math","floor","random","length","react_default","a","createElement","style","backgroundColor","className","alt","onLoad","src","Component","GifBox","handleMouseHover","toggleHoverState","setHoverMessage","message","hoverMessage","setTimeout","handleClickFavorte","toggleFavoriteState","gif","data","toggleFavGif","id","url","images","handleClickCopyLink","el","document","value","body","appendChild","select","execCommand","removeChild","hover","favorite","isFav","_this$state","starClasses","push","onMouseEnter","onMouseLeave","onClick","join","components_ImageContainer","title","fixed_height","connect","dispatch","getState","currentFavorites","gifReducer","favorites","filteredFavs","filter","e","type","payload","searchGifsAPI","searchValue","page","s","p","concat","split","axios","get","then","response","catch","err","console","log","searchGifsAction","loadMore","_ref","asyncToGenerator","regenerator_default","mark","_callee","currentState","searchReducerData","gifReducerData","currentPageValue","currentSearchValue","currentFavoriteIds","gifData","wrap","_context","prev","next","searchReducer","pageNumber","map","sent","forEach","includes","gifPaginateData","pagination","stop","_x","_x2","apply","arguments","updateSearchValueAction","event","target","GifTable","handleLoadMoreClick","enableLoadMore","meta","showTable","Array","showMore","total_count","index","components_GifBox","key","getPathParams","pathname","shift","pop","Home","prevProps","location","clearGifData","pathParams","components_GifTable","Favorites","setFavorites","paginateData","_this$setFavorites","SearchBox","submitSearch","history","handleKeyPress","tpe","onChange","onKeyPress","placeholder","withRouter","Header","Link","to","components_SearchBox","App","components_Header","Switch","Route","path","component","Boolean","window","hostname","match","combineReducers","undefined","action","objectSpread","toConsumableArray","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","BrowserRouter","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f6346fe.chunk.js","sourcesContent":["export const SEARCH_ACTIONS = {\n  UPDATE_SEARCH_VALUE: 'UPDATE_SEARCH_VALUE',\n  INCREMENT_PAGE_NUMBER: 'INCREMENT_PAGE_NUMBER',\n  CLEAR_PAGE_NUMBER: 'CLEAR_PAGE_NUMBER'\n}\n\nexport const GIF_DATA_ACTIONS = {\n  SEARCH_GIFS: 'SEARCH_GIFS',\n  APPEND_GIFS: 'APPEND_GIFS',\n  FAV_GIF: 'FAVORITE_GIF'\n}","export const BASE_URL = 'https://api.giphy.com/v1/gifs';\nexport const GIPHY_API_KEY = 'Xc47ov5HBaQVCQFfHxnj4WpVIP2pZgmB';\nexport const FAVORITES = 'favorites';\nexport const PASTEL_COLORS = ['#FFD7A3', '#FFC2FD', '#F9FFAE', '#8590FF', '#FFC7F4', '#9ECDFF', '#EDFFC2', '#FEC2FF', '#AA9EFF', '#FF938A', '#FFD0C2', '#FFCBBD', '#FF8FA1'];\n","import React, { Component } from 'react';\nimport { PASTEL_COLORS } from '../config';\n\nclass ImageContainer extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      loaded: false\n    }\n  }\n\n  handleImageLoaded = () => {\n    this.setState({ loaded: true }, );\n  }\n\n  render() {\n    const { source, altText } = this.props;\n    const { loaded } = this.state;\n    const randomColor = PASTEL_COLORS[Math.floor(Math.random()*PASTEL_COLORS.length)];\n    return (\n      <div style={{ backgroundColor: randomColor}} className='gif-placeholder'>\n        <img alt={altText} onLoad={this.handleImageLoaded} className={`gif ` + (loaded ? `loaded` : '')} src={source} />\n      </div>\n    );\n  }\n}\n\nexport default ImageContainer;\n\n","import React, { Component } from 'react';\nimport { toggleFavGif } from '../actions/gifActions';\nimport { connect } from 'react-redux';\nimport ImageContainer from './ImageContainer';\nclass GifBox extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      hover: false,\n      favorite: false,\n      hoverMessage: ''\n    }\n  }\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  }\n\n  setHoverMessage = (message) => {\n    this.setState({ hoverMessage: message});\n    setTimeout(3000, this.setState({ hoverMessage: ''}));\n  }\n\n  handleClickFavorte = () => {\n    this.setHoverMessage('Gif Favorited!');\n    this.setState(this.toggleFavoriteState, () => {\n      const gif = this.props.data;\n      this.props.toggleFavGif({\n        id: gif.id,\n        url: gif.url,\n        images: gif.images\n      });\n    });\n  }\n\n  componentDidMount () {\n    const { data } = this.props;\n\n    if (data.isFav) this.setState({ favorite: true });\n  }\n\n  handleClickCopyLink = () => {\n    this.setHoverMessage('Link Copied!');\n    const { data } = this.props;\n    const el = document.createElement('textarea');\n    el.value = data.url;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  }\n\n  toggleHoverState = (state) => {\n    return {\n      hover: !state.hover\n    }\n  }\n\n  toggleFavoriteState = (state) => {\n    return {\n      favorite: !state.favorite\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n    const { hover, favorite, hoverMessage } = this.state;\n\n    const starClasses = ['fa fa-star'];\n    if (favorite) {\n      starClasses.push('isFav');\n    }\n    return (\n      <div onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover} className='gif-box-container'>\n        {hover && <div className={'gif-hover-box' + (hover ? ' active' : '')}>\n          {hoverMessage && <div>{hoverMessage}</div>}\n          <div className='hover-box-buttons'>\n            <i onClick={this.handleClickCopyLink} className='fa fa-link'></i>\n            <i onClick={this.handleClickFavorte} className={starClasses.join(' ')}></i>\n          </div>\n        </div>}\n        <ImageContainer altText={data.title} source={data.images.fixed_height.url} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {toggleFavGif})(GifBox);\n\n","import { GIF_DATA_ACTIONS, SEARCH_ACTIONS } from '../actions';\n\nexport function toggleFavGif (gif) {\n  return (dispatch, getState) => {\n    const currentState = getState();\n    const currentGifState = currentState.gifReducer;\n    const currentFavorites = currentGifState.favorites;\n\n    const filteredFavs = currentFavorites.filter(e => e.id !== gif.id);\n    if (filteredFavs.length === currentFavorites.length) {\n      gif.isFav = true;\n      filteredFavs.push(gif);\n    }\n    dispatch({type: GIF_DATA_ACTIONS.FAV_GIF, payload: filteredFavs});\n  }\n}\n\nexport function clearGifData () {\n  return (dispatch) => {\n    dispatch({ type: SEARCH_ACTIONS.UPDATE_SEARCH_VALUE, payload: ''});\n    dispatch({ type: GIF_DATA_ACTIONS.SEARCH_GIFS, payload: { gifData: [], gifPaginateData: {} } });\n  }\n}\n","import { BASE_URL, GIPHY_API_KEY} from '../config';\nimport axios from 'axios';\n\nexport default function searchGifsAPI (searchValue, page) {\n  const url = buildSearchUrl(searchValue, page);\n  return axios.get(url)\n  .then((response) => {\n    const { data } = response;\n    return data;\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n}\n\nfunction buildSearchUrl (s, p) {\n  const url = `${BASE_URL}/search?api_key=${GIPHY_API_KEY}&q=${s.split(' ').join('+')}&offset=${p*25}`;\n\n  return url;\n}","import searchGifsAPI from '../apis/searchAPI';\nimport { SEARCH_ACTIONS, GIF_DATA_ACTIONS } from '../actions';\n\nexport function searchGifsAction (loadMore) {\n  return async (dispatch, getState) => {\n\n    if (loadMore) {\n      dispatch({ type: SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER });\n    } else {\n      dispatch({ type: SEARCH_ACTIONS.CLEAR_PAGE_NUMBER });\n    }\n\n    const currentState = getState();\n    const searchReducerData = currentState.searchReducer;\n    const gifReducerData = currentState.gifReducer;\n    const currentPageValue = searchReducerData.pageNumber;\n    const currentSearchValue = searchReducerData.searchValue;\n    const currentFavoriteIds = gifReducerData.favorites.map(gif => gif.id);\n    const gifData = await searchGifsAPI(currentSearchValue, currentPageValue);\n    gifData.data.forEach(gif => {\n      if (currentFavoriteIds.includes(gif.id)) {\n        gif.isFav = true;\n      }\n      return gif;\n    });\n    if (loadMore) {\n      dispatch({ type: GIF_DATA_ACTIONS.APPEND_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n    } else {\n      dispatch({ type: GIF_DATA_ACTIONS.SEARCH_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n    }\n  };\n};\n\nexport function updateSearchValueAction (event) {\n  return (dispatch) => {\n    dispatch({type: SEARCH_ACTIONS.UPDATE_SEARCH_VALUE, payload: event.target.value});\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GifBox from './GifBox';\nimport {searchGifsAction} from '../actions/searchActions';\n\nclass GifTable extends Component {\n\n  handleLoadMoreClick = () => {\n    this.props.searchGifsAction(true);\n  }\n\n  render() {\n    const { data, enableLoadMore, meta } = this.props;\n\n    const showTable = (data && data instanceof Array && data.length);\n    if (!showTable) {\n      return null;\n    }\n\n    const showMore = enableLoadMore && showTable;\n    return (\n      <div className='table-container'>\n        <div className='table-meta'>{meta.total_count} gifs</div>\n        <div className='table'>\n          {data.map((gif, index) => <GifBox key={index} data={gif} />)}\n        </div>\n        <div className='more-container'>\n          {showMore ?\n          <div onClick={this.handleLoadMoreClick} className='more-button'>\n            <div className='button-label'>Give me MORE!</div>\n          </div> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {searchGifsAction})(GifTable);\n","export function getPathParams (pathname) {\n  pathname = pathname.split('');\n  if (pathname[0] === '/') pathname.shift();\n  if (pathname[1] === '/') pathname.pop();\n  pathname = pathname.join('');\n  return pathname.split('/');\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GifTable from '../components/GifTable';\nimport { getPathParams } from '../util/pathHelper';\nimport { updateSearchValueAction, searchGifsAction } from '../actions/searchActions';\nimport { clearGifData } from '../actions/gifActions';\n\nclass Home extends Component {\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      const { location } = this.props;\n      let { pathname } = location;\n      const pathParams = getPathParams(pathname);\n      if (pathParams[0] === '') {\n        this.props.clearGifData()\n      }\n    }\n  }\n\n  componentDidMount () {\n    const { location } = this.props;\n    let { pathname } = location;\n    const pathParams = getPathParams(pathname);\n    if (pathParams.length === 2) {\n      const searchValue = pathParams[1];\n      const event = {\n        target: {\n          value: searchValue\n        }\n      }\n      this.props.updateSearchValueAction(event);\n      this.props.searchGifsAction();\n    } else if (pathParams[0] === '') {\n      this.props.clearGifData()\n    }\n  }\n\n  render() {\n    const { gifData, gifPaginateData } = this.props;\n    return (\n      <div className='home-view'>\n        <GifTable enableLoadMore meta={gifPaginateData} data={gifData} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gifData: state.gifReducer.gifData,\n  gifPaginateData: state.gifReducer.gifPaginateData\n});\n\nexport default connect(mapStateToProps, {updateSearchValueAction, searchGifsAction, clearGifData})(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {FAVORITES} from '../config';\nimport GifTable from '../components/GifTable';\nimport { updateSearchValueAction } from '../actions/searchActions';\nclass Favorites extends Component {\n\n  setFavorites = () => {\n    const data = this.props.favorites;\n    const paginateData = {\n      total_count: data.length\n    };\n    return { data, paginateData };\n  }\n\n  componentDidMount () {\n    const event = {\n      target: {\n        value: ''\n      }\n    }\n    this.props.updateSearchValueAction(event);\n  }\n\n  render() {\n    const { data, paginateData } = this.setFavorites();\n    return (\n      <div className='favorites-view'>\n        <GifTable meta={paginateData} data={data} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  favorites: state.gifReducer.favorites\n});\n\nexport default connect(mapStateToProps, {updateSearchValueAction})(Favorites);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {searchGifsAction, updateSearchValueAction} from '../actions/searchActions';\nimport { withRouter } from 'react-router';\nclass SearchBox extends Component {\n\n  submitSearch = () => {\n    const { searchValue } = this.props;\n    if (searchValue.length) {\n      this.props.searchGifsAction();\n      this.props.history.push(`/search/${searchValue}`)\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.submitSearch();\n    }\n  }\n\n  render() {\n    const { searchValue } = this.props;\n    return (\n      <div className='search-container'>\n        <input tpe='text' onChange={this.props.updateSearchValueAction} onKeyPress={this.handleKeyPress} value={searchValue} className='search-input' placeholder='Search...' />\n        <i onClick={this.submitSearch} className='fa fa-search search-button'></i>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchValue: state.searchReducer.searchValue\n});\n\nexport default withRouter(connect(mapStateToProps, {searchGifsAction, updateSearchValueAction})(SearchBox));\n\n","import React, { Component } from 'react';\nimport SearchBox from './SearchBox';\nimport { Link } from 'react-router-dom';\nclass Header extends Component {\n  render() {\n    return (\n      <div className='header-container'>\n        <Link to='/' className='header-title title'>Its Not Jif</Link>\n        <SearchBox />\n        <Link to='/favorites' className='header-title fav'>Favorites</Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Home from '../views/Home';\nimport Favorites from '../views/Favorites';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <Switch>\n          <Route path='/search' component={Home} />\n          <Route path='/favorites' component={Favorites} />\n          <Route path='/' component={Home} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\nimport gifReducer from './gifReducer';\nexport default combineReducers({\n  searchReducer,\n  gifReducer\n});","import { SEARCH_ACTIONS } from '../actions';\n\nexport default (state = {\n  searchValue: '',\n  pageNumber: 1\n}, action) => {\n  switch (action.type) {\n    case SEARCH_ACTIONS.UPDATE_SEARCH_VALUE:\n      return { ...state,\n        searchValue: action.payload\n      }\n    case SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: state.pageNumber + 1\n      }\n    case SEARCH_ACTIONS.CLEAR_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: 1\n      }\n    default:\n      return state\n  }\n}","import { GIF_DATA_ACTIONS } from '../actions';\n\nexport default (state = {\n  gifData: [],\n  gifPaginateData: {},\n  favorites: []\n}, action) => {\n  switch (action.type) {\n    case GIF_DATA_ACTIONS.SEARCH_GIFS:\n      return { ...state,\n        gifData: action.payload.gifData,\n        gifPaginateData: action.payload.gifPaginateData\n      };\n    case GIF_DATA_ACTIONS.APPEND_GIFS:\n      return { ...state,\n        gifData: [...state.gifData, ...action.payload.gifData],\n        gifPaginateData: action.payload.gifPaginateData\n      };\n    case GIF_DATA_ACTIONS.FAV_GIF:\n      return { ...state,\n        favorites: action.payload\n      };\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}