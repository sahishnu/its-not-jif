{"version":3,"sources":["actions.js","config.js","components/ImageContainer.js","components/GifBox.js","actions/gifActions.js","apis/searchAPI.js","actions/searchActions.js","components/GifTable.js","util/pathHelper.js","views/Home.js","views/Favorites.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/searchReducer.js","reducers/gifReducer.js","index.js","store.js"],"names":["SEARCH_ACTIONS","UPDATE_SEARCH_VALUE","INCREMENT_PAGE_NUMBER","CLEAR_PAGE_NUMBER","GIF_DATA_ACTIONS","SEARCH_GIFS","APPEND_GIFS","FAV_GIF","LOADING_START","SEARCH_ERROR","BASE_URL","GIPHY_API_KEY","PASTEL_COLORS","ImageContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleImageLoaded","setState","loaded","getRandomPasteleColor","Math","floor","random","length","state","bgc","_this$props","source","altText","_this$state","react_default","a","createElement","style","backgroundColor","className","alt","onLoad","src","Component","GifBox","handleMouseHover","toggleHoverState","setHoverMessage","message","hoverMessage","timeout","setTimeout","handleClickFavorte","favorite","toggleFavoriteState","gif","data","toggleFavGif","id","url","images","title","handleClickCopyLink","el","document","value","body","appendChild","select","execCommand","removeChild","hover","renderTempMessage","renderHoverBox","starClasses","push","onClick","join","clearTimeout","isFav","onMouseEnter","onMouseLeave","components_ImageContainer","fixed_height","connect","dispatch","getState","currentFavorites","gifReducer","favorites","filteredFavs","filter","e","type","payload","searchGifsAPI","searchValue","page","s","p","concat","split","axios","get","then","response","catch","err","searchGifsAction","loadMore","_ref","asyncToGenerator","regenerator_default","mark","_callee","currentState","searchReducerData","gifReducerData","currentPageValue","currentSearchValue","currentFavoriteIds","gifData","wrap","_context","prev","next","searchReducer","pageNumber","map","sent","forEach","includes","gifPaginateData","pagination","stop","_x","_x2","apply","arguments","updateSearchValueAction","event","target","GifTable","handleLoadMoreClick","renderTotalGifs","meta","showTable","Array","total_count","renderLoader","isLoading","renderGifs","gifs","index","components_GifBox","key","renderShowMoreButton","_this$props2","enableLoadMore","getPathParams","pathname","shift","pop","Home","renderErrorMessage","searchError","prevProps","location","clearGifData","pathParams","components_GifTable","loading","Favorites","setFavorites","paginateData","_this$setFavorites","SearchBox","submitSearch","history","handleKeyPress","tpe","onChange","onKeyPress","placeholder","withRouter","Header","classname","Link","to","components_SearchBox","NavLink","activeClassName","Footer","rel","href","App","components_Header","Switch","Route","path","component","components_Footer","Boolean","window","hostname","match","combineReducers","undefined","action","objectSpread","toConsumableArray","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","BrowserRouter","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.420ab637.chunk.js","sourcesContent":["export const SEARCH_ACTIONS = {\n  UPDATE_SEARCH_VALUE: 'UPDATE_SEARCH_VALUE',\n  INCREMENT_PAGE_NUMBER: 'INCREMENT_PAGE_NUMBER',\n  CLEAR_PAGE_NUMBER: 'CLEAR_PAGE_NUMBER'\n}\n\nexport const GIF_DATA_ACTIONS = {\n  SEARCH_GIFS: 'SEARCH_GIFS',\n  APPEND_GIFS: 'APPEND_GIFS',\n  FAV_GIF: 'FAVORITE_GIF',\n  LOADING_START: 'LOADING_START',\n  SEARCH_ERROR: 'SEARCH_ERROR'\n}","export const BASE_URL = 'https://api.giphy.com/v1/gifs';\nexport const GIPHY_API_KEY = 'Xc47ov5HBaQVCQFfHxnj4WpVIP2pZgmB';\nexport const PASTEL_COLORS = ['#FFD7A3', '#FFC2FD', '#F9FFAE', '#8590FF', '#FFC7F4', '#9ECDFF', '#EDFFC2', '#FEC2FF', '#AA9EFF', '#FF938A', '#FFD0C2', '#FFCBBD', '#FF8FA1'];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PASTEL_COLORS } from '../config';\n\nclass ImageContainer extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      bgc: 'white'\n    }\n  }\n\n  handleImageLoaded = () => {\n    this.setState({ loaded: true }, );\n  }\n\n  componentDidMount () {\n    this.setState({ bgc: this.getRandomPasteleColor()})\n  }\n\n  getRandomPasteleColor = () => {\n    return PASTEL_COLORS[Math.floor(Math.random()*PASTEL_COLORS.length)];\n  }\n\n  render() {\n    const { source, altText } = this.props;\n    const { loaded, bgc } = this.state;\n    return (\n      <div style={{ backgroundColor: bgc}} className='gif-placeholder'>\n        <img alt={altText} onLoad={this.handleImageLoaded} className={`gif ` + (loaded ? `loaded` : '')} src={source} />\n      </div>\n    );\n  }\n}\n\nexport default ImageContainer;\n\nImageContainer.propTypes = {\n  source: PropTypes.string.isRequired,\n  altText: PropTypes.string.isRequired\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toggleFavGif } from '../actions/gifActions';\nimport { connect } from 'react-redux';\nimport ImageContainer from './ImageContainer';\nclass GifBox extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      hover: false,\n      favorite: false,\n      hoverMessage: ''\n    }\n    this.timeout = null;\n  }\n\n  // toggle hover state on mouse over or out\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  }\n\n  // set message on hover button click for 2 seconds\n  setHoverMessage = (message) => {\n    this.setState({ hoverMessage: message});\n    this.timeout = setTimeout(() => this.setState({ hoverMessage: ''}), 2000);\n  }\n\n  // handle clicking favorite button\n  handleClickFavorte = () => {\n    const { favorite } = this.state;\n    if (favorite) {\n      this.setHoverMessage('Gif Unfavorited!');\n    } else {\n      this.setHoverMessage('Gif Favorited!');\n    }\n    // pass gif in question to action\n    this.setState(this.toggleFavoriteState, () => {\n      const gif = this.props.data;\n      this.props.toggleFavGif({\n        id: gif.id,\n        url: gif.url,\n        images: gif.images,\n        title: gif.title\n      });\n    });\n  }\n\n  // clear timeouts on unmount to avoid memory leak\n  componentWillUnmount () {\n    clearTimeout(this.timeout)\n  }\n\n  // if gif is a favorite - set its state\n  componentDidMount () {\n    const { data } = this.props;\n\n    if (data.isFav) this.setState({ favorite: true });\n  }\n\n  // handle copy link click\n  handleClickCopyLink = () => {\n    this.setHoverMessage('Link Copied!');\n    const { data } = this.props;\n    const el = document.createElement('textarea');\n    el.value = data.url;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  }\n\n  // toggle hover state on mouse on or off\n  toggleHoverState = (state) => {\n    return {\n      hover: !state.hover\n    }\n  }\n  // toggle favorite state on or off\n  toggleFavoriteState = (state) => {\n    return {\n      favorite: !state.favorite\n    }\n  }\n\n  renderTempMessage = () => {\n    const { hoverMessage } = this.state;\n\n    if (hoverMessage) {\n      return (\n        <div className='message-box'>{hoverMessage}</div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  renderHoverBox = () => {\n    const { hover, favorite, hoverMessage } = this.state;\n    const starClasses = ['fa fa-star'];\n    if (favorite) {\n      starClasses.push('isFav');\n    }\n    if (!hoverMessage && hover) {\n      return (\n        <div className={'gif-hover-box' + (hover ? ' active' : '')}>\n          <div className='hover-box-buttons'>\n            <i onClick={this.handleClickCopyLink} className='fa fa-link'></i>\n            <i onClick={this.handleClickFavorte} className={starClasses.join(' ')}></i>\n          </div>\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <div onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover} className='gif-box-container'>\n        {this.renderTempMessage()}\n        {this.renderHoverBox()}\n        <ImageContainer altText={data.title} source={data.images.fixed_height.url} />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {toggleFavGif})(GifBox);\n\nGifBox.propTypes = {\n  data: PropTypes.object.isRequired,\n  toggleFavGif: PropTypes.func.isRequired\n}\n\n","import { GIF_DATA_ACTIONS, SEARCH_ACTIONS } from '../actions';\n\nexport function toggleFavGif (gif) {\n  return (dispatch, getState) => {\n    const currentState = getState();\n    const currentGifState = currentState.gifReducer;\n    const currentFavorites = currentGifState.favorites;\n\n    const filteredFavs = currentFavorites.filter(e => e.id !== gif.id);\n    if (filteredFavs.length === currentFavorites.length) {\n      gif.isFav = true;\n      filteredFavs.push(gif);\n    }\n    dispatch({type: GIF_DATA_ACTIONS.FAV_GIF, payload: filteredFavs});\n  }\n}\n\nexport function clearGifData () {\n  return (dispatch) => {\n    dispatch({ type: SEARCH_ACTIONS.UPDATE_SEARCH_VALUE, payload: ''});\n    dispatch({ type: GIF_DATA_ACTIONS.SEARCH_GIFS, payload: { gifData: [], gifPaginateData: {} } });\n  }\n}\n","import { BASE_URL, GIPHY_API_KEY} from '../config';\nimport axios from 'axios';\n\nexport default function searchGifsAPI (searchValue, page) {\n  const url = buildSearchUrl(searchValue, page);\n  return axios.get(url)\n  .then((response) => {\n    const { data } = response;\n    return data;\n  })\n  .catch((err) => {\n    return err;\n  })\n}\n\nfunction buildSearchUrl (s, p) {\n  const url = `${BASE_URL}/search?api_key=${GIPHY_API_KEY}&q=${s.split(' ').join('+')}&offset=${p*25}`;\n\n  return url;\n}","import searchGifsAPI from '../apis/searchAPI';\nimport { SEARCH_ACTIONS, GIF_DATA_ACTIONS } from '../actions';\n\nexport function searchGifsAction (loadMore) {\n  return async (dispatch, getState) => {\n    dispatch({ type: GIF_DATA_ACTIONS.LOADING_START });\n    if (loadMore) {\n      dispatch({ type: SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER });\n    } else {\n      dispatch({ type: SEARCH_ACTIONS.CLEAR_PAGE_NUMBER });\n    }\n\n    const currentState = getState();\n    const searchReducerData = currentState.searchReducer;\n    const gifReducerData = currentState.gifReducer;\n    const currentPageValue = searchReducerData.pageNumber;\n    const currentSearchValue = searchReducerData.searchValue;\n    const currentFavoriteIds = gifReducerData.favorites.map(gif => gif.id);\n    const gifData = await searchGifsAPI(currentSearchValue, currentPageValue);\n\n    if (gifData && gifData.data) {\n      gifData.data.forEach(gif => {\n        if (currentFavoriteIds.includes(gif.id)) {\n          gif.isFav = true;\n        }\n        return gif;\n      });\n      if (loadMore) {\n        dispatch({ type: GIF_DATA_ACTIONS.APPEND_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n      } else {\n        dispatch({ type: GIF_DATA_ACTIONS.SEARCH_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n      }\n    } else {\n      dispatch({ type: GIF_DATA_ACTIONS.SEARCH_ERROR });\n    }\n\n  };\n};\n\nexport function updateSearchValueAction (event) {\n  return (dispatch) => {\n    dispatch({type: SEARCH_ACTIONS.UPDATE_SEARCH_VALUE, payload: event.target.value});\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GifBox from './GifBox';\nimport {searchGifsAction} from '../actions/searchActions';\n\nclass GifTable extends Component {\n\n  // if click more button, load more gifs with current search params\n  handleLoadMoreClick = () => {\n    this.props.searchGifsAction(true);\n  }\n\n  // render number of total gifs\n  renderTotalGifs = () => {\n    const { data, meta } = this.props;\n\n    if (!data || !meta) {\n      return null;\n    }\n    const showTable = !!(data && data instanceof Array && data.length);\n    const { total_count } = meta;\n\n    if (showTable) {\n      return <div className='table-meta'>{total_count} gifs</div>\n    }\n\n    return null;\n  }\n\n  // render spinner if network request is pending\n  renderLoader = () => {\n    const { isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <div className='loading-container'>\n          <i className='fa fa-spinner'></i>\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  // render all gifs in GifBox\n  renderGifs = () => {\n    const { data } = this.props;\n    const gifs = data.map((gif, index) => <GifBox key={index} data={gif} />);\n    if (data) {\n      return gifs;\n    } else {\n      return null;\n    }\n  }\n\n  // render show more button\n  renderShowMoreButton = () => {\n    const { data, enableLoadMore, meta } = this.props;\n    const showTable = !!(data && data instanceof Array && data.length);\n    const { total_count } = meta;\n    const showMore = !!(enableLoadMore && showTable && (data.length < total_count));\n\n    if (showMore) {\n      return (\n        <div className='more-container'>\n          <div onClick={this.handleLoadMoreClick} className='more-button'>\n            <div className='button-label'>Give me MORE!</div>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    return (\n      <div className='table-container'>\n        {this.renderTotalGifs()}\n        <div className='table'>\n          {this.renderGifs()}\n        </div>\n        {this.renderLoader()}\n        {this.renderShowMoreButton()}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {searchGifsAction})(GifTable);\n\nGifTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n  enableLoadMore: PropTypes.bool,\n  isLoading: PropTypes.bool.isRequired,\n  searchGifsAction: PropTypes.func.isRequired\n}\n","export function getPathParams (pathname) {\n  pathname = pathname.split('');\n  if (pathname[0] === '/') pathname.shift();\n  if (pathname[1] === '/') pathname.pop();\n  pathname = pathname.join('');\n  return pathname.split('/');\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GifTable from '../components/GifTable';\nimport { getPathParams } from '../util/pathHelper';\nimport { updateSearchValueAction, searchGifsAction } from '../actions/searchActions';\nimport { clearGifData } from '../actions/gifActions';\n\n// Gif data will come from gifData in redux store\nclass Home extends Component {\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.location.pathname !== this.props.location.pathname) {\n      const { location } = this.props;\n      let { pathname } = location;\n      const pathParams = getPathParams(pathname);\n      if (pathParams[0] === '') {\n        this.props.clearGifData()\n      }\n    }\n  }\n\n  componentDidMount () {\n    const { location } = this.props;\n    let { pathname } = location; // will give path value after base path\n    const pathParams = getPathParams(pathname);\n    // if path '/search/{SOME_VALUE}' then make a search for {SOME_VALUE}\n    if (pathParams.length === 2) {\n      const searchValue = pathParams[1];\n      const event = {\n        target: {\n          value: searchValue\n        }\n      }\n      this.props.updateSearchValueAction(event);\n      this.props.searchGifsAction();\n    } else if (pathParams[0] === '') {\n      // if back at base path, clear gifs\n      this.props.clearGifData()\n    }\n  }\n\n  // render error message if one occurs\n  renderErrorMessage = () => {\n    const { searchError } = this.props;\n\n    if (searchError) {\n      return (\n      <div className='error-container'>\n        <div className='error-message'>Sorry, an error has occurred!</div>\n        <i className='fa fa-exclamation-triangle error-icon'></i>\n      </div>);\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { gifData, gifPaginateData, isLoading } = this.props;\n    return (\n      <div className='home-view view'>\n        {this.renderErrorMessage()}\n        <GifTable isLoading={isLoading} enableLoadMore meta={gifPaginateData} data={gifData} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gifData: state.gifReducer.gifData,\n  gifPaginateData: state.gifReducer.gifPaginateData,\n  isLoading: state.gifReducer.loading,\n  searchError: state.gifReducer.searchError\n});\n\nexport default connect(mapStateToProps, {updateSearchValueAction, searchGifsAction, clearGifData})(Home);\n\nHome.propTypes = {\n  gifData: PropTypes.array.isRequired,\n  gifPaginateData: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  updateSearchValueAction: PropTypes.func.isRequired,\n  searchGifsAction: PropTypes.func.isRequired,\n  clearGifData: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GifTable from '../components/GifTable';\nimport { updateSearchValueAction } from '../actions/searchActions';\nclass Favorites extends Component {\n\n  setFavorites = () => {\n    const data = this.props.favorites;\n    const paginateData = {\n      total_count: data.length\n    };\n    return { data, paginateData };\n  }\n\n  componentDidMount () {\n    const event = {\n      target: {\n        value: ''\n      }\n    }\n    this.props.updateSearchValueAction(event);\n  }\n\n  render() {\n    const { data, paginateData } = this.setFavorites();\n    return (\n      <div className='favorites-view view'>\n        {(data.length === 0) && <div>No favorite gifs!</div>}\n        <GifTable isLoading={false} meta={paginateData} data={data} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  favorites: state.gifReducer.favorites\n});\n\nexport default connect(mapStateToProps, {updateSearchValueAction})(Favorites);\n\nFavorites.propTypes = {\n  favorites: PropTypes.array.isRequired,\n  updateSearchValueAction: PropTypes.func.isRequired\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {searchGifsAction, updateSearchValueAction} from '../actions/searchActions';\nimport { withRouter } from 'react-router';\nclass SearchBox extends Component {\n\n  submitSearch = () => {\n    const { searchValue } = this.props;\n    if (searchValue.length) {\n      this.props.searchGifsAction();\n      this.props.history.push(`/search/${searchValue}`)\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.submitSearch();\n    }\n  }\n\n  render() {\n    const { searchValue } = this.props;\n    return (\n      <div className='search-container'>\n        <div className='input-container'>\n          <input tpe='text' onChange={this.props.updateSearchValueAction} onKeyPress={this.handleKeyPress} value={searchValue} className='search-input' placeholder='Search...' />\n        </div>\n        <div className='search-button-container'>\n          <i onClick={this.submitSearch} className='fa fa-search search-button'></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchValue: state.searchReducer.searchValue\n});\n\nexport default withRouter(connect(mapStateToProps, {searchGifsAction, updateSearchValueAction})(SearchBox));\n\nSearchBox.propTypes = {\n  history: PropTypes.object.isRequired,\n  searchGifsAction: PropTypes.func.isRequired,\n  updateSearchValueAction: PropTypes.func.isRequired\n}\n","import React, { Component } from 'react';\nimport SearchBox from './SearchBox';\nimport { Link, NavLink } from 'react-router-dom';\nclass Header extends Component {\n  render() {\n    const { classname } = this.props;\n    return (\n      <div className={classname}>\n        <Link to='/' className='header-title title'>Its Not Jif</Link>\n        <SearchBox />\n        <NavLink activeClassName='active-link' to='/favorites' className='header-title fav'>Favorites</NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className='footer-info'>\n        <span>Made by Sahishnu Patel - </span>\n        <a className='link' target='_blank' rel='noopener noreferrer' href='https://github.com/sahishnu/its-not-jif'>Source Code</a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Home from '../views/Home';\nimport Favorites from '../views/Favorites';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\n// Main wrapper component for app\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        {/* Search header always shows */}\n        <Header classname='header-container' />\n        <Switch>\n          {/* Only difference between Home & Favorites component is where the Gif Data comes from */}\n          <Route path='/search' component={Home} />\n          <Route path='/favorites' component={Favorites} />\n          <Route path='/' component={Home} />\n        </Switch>\n        <Header classname='footer-container' />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\nimport gifReducer from './gifReducer';\nexport default combineReducers({\n  searchReducer,\n  gifReducer\n});","import { SEARCH_ACTIONS } from '../actions';\n\nexport default (state = {\n  searchValue: '',\n  pageNumber: 1,\n  searchError: false\n}, action) => {\n  switch (action.type) {\n    case SEARCH_ACTIONS.UPDATE_SEARCH_VALUE:\n      return { ...state,\n        searchValue: action.payload\n      }\n    case SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: state.pageNumber + 1\n      }\n    case SEARCH_ACTIONS.CLEAR_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: 1\n      }\n    case SEARCH_ACTIONS.SEARCH_ERROR:\n      return { ...state,\n        searchError: true\n      }\n    default:\n      return state\n  }\n}","import { GIF_DATA_ACTIONS } from '../actions';\n\nexport default (state = {\n  gifData: [],\n  gifPaginateData: {},\n  favorites: [],\n  loading: false,\n  searchError: false\n}, action) => {\n  switch (action.type) {\n    case GIF_DATA_ACTIONS.SEARCH_GIFS:\n      return { ...state,\n        gifData: action.payload.gifData,\n        gifPaginateData: action.payload.gifPaginateData,\n        loading: false\n      };\n    case GIF_DATA_ACTIONS.APPEND_GIFS:\n      return { ...state,\n        gifData: [...state.gifData, ...action.payload.gifData],\n        gifPaginateData: action.payload.gifPaginateData,\n        loading: false\n      };\n    case GIF_DATA_ACTIONS.FAV_GIF:\n      return { ...state,\n        favorites: action.payload\n      };\n    case GIF_DATA_ACTIONS.LOADING_START:\n      return { ...state,\n        loading: true,\n        searchError: false\n      }\n    case GIF_DATA_ACTIONS.SEARCH_ERROR:\n      return { ...state,\n        searchError: true,\n        loading: false\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\n/**\n * Wrapp App component in Redux store provider & browser router\n */\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}