{"version":3,"sources":["config.js","apis/searchAPI.js","actions.js","actions/searchActions.js","components/SearchBox.js","components/Header.js","components/GifBox.js","components/GifTable.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/searchReducer.js","reducers/gifReducer.js","index.js","store.js"],"names":["BASE_URL","GIPHY_API_KEY","searchGifsAPI","searchValue","page","s","p","url","concat","split","join","axios","get","then","response","data","catch","err","console","log","SEARCH_ACTIONS","UPDATE_SEARCH_VALUE","INCREMENT_PAGE_NUMBER","CLEAR_PAGE_NUMBER","GIF_DATA_ACTIONS","SEARCH_GIFS","APPEND_GIFS","searchGifsAction","loadMore","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","currentState","searchReducerData","currentPageValue","currentSearchValue","gifData","wrap","_context","prev","next","type","searchReducer","pageNumber","sent","payload","gifPaginateData","pagination","stop","this","_x","_x2","apply","arguments","SearchBox","submitSearch","_this","props","length","handleKeyPress","e","key","react_default","createElement","className","tpe","onChange","updateSearchValueAction","onKeyPress","value","placeholder","onClick","Component","connect","state","event","target","Header","components_SearchBox","GifBox","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseHover","setState","toggleHoverState","handleClickFavorte","toggleFavoriteState","handleClickCopyLink","el","document","body","appendChild","select","execCommand","removeChild","hover","favorite","_this$state","starClasses","push","onMouseEnter","onMouseLeave","alt","id","src","images","fixed_height","GifTable","handleLoadMoreClick","_this$props","showMore","Array","map","gif","index","components_GifBox","gifReducer","App","components_Header","components_GifTable","Boolean","window","location","hostname","match","combineReducers","undefined","action","objectSpread","toConsumableArray","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQAAaA,EAAW,gCACXC,EAAgB,oDCEd,SAASC,EAAeC,EAAaC,GAClD,IAWuBC,EAAGC,EAXpBC,GAWiBF,EAXIF,EAWDG,EAXcF,EAY/B,GAAAI,OAAMR,EAAN,oBAAAQ,OAAiCP,EAAjC,OAAAO,OAAoDH,EAAEI,MAAM,KAAKC,KAAK,KAAtE,YAAAF,OAAuF,GAAFF,IAX9F,OAAOK,IAAMC,IAAIL,GAChBM,KAAK,SAACC,GAEL,OADiBA,EAATC,OAGTC,MAAM,SAACC,GACNC,QAAQC,IAAIF,KCXT,IAAMG,EAAiB,CAC5BC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,kBAAmB,qBAGRC,EAAmB,CAC9BC,YAAa,cACbC,YAAa,eCLR,SAASC,EAAkBC,GAChC,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAC,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGHV,EADER,EACO,CAAEmB,KAAM3B,EAAeE,uBAEvB,CAAEyB,KAAM3B,EAAeG,oBAG5Be,EAAeD,IACfE,EAAoBD,EAAaU,cACjCR,EAAmBD,EAAkBU,WACrCR,EAAqBF,EAAkBpC,YAXxCyC,EAAAE,KAAA,EAYiB5C,EAAcuC,EAAoBD,GAZnD,OAYCE,EAZDE,EAAAM,KAeHd,EADER,EACO,CAAEmB,KAAMvB,EAAiBE,YAAayB,QAAS,CAAET,QAASA,EAAQ3B,KAAMqC,gBAAiBV,EAAQW,aAEjG,CAAEN,KAAMvB,EAAiBC,YAAa0B,QAAS,CAAET,QAASA,EAAQ3B,KAAMqC,gBAAiBV,EAAQW,cAjBvG,wBAAAT,EAAAU,SAAAnB,EAAAoB,SAAP,gBAAAC,EAAAC,GAAA,OAAA5B,EAAA6B,MAAAH,KAAAI,YAAA,OCAIC,6MAEJC,aAAe,WACWC,EAAKC,MAArB5D,YACQ6D,QACdF,EAAKC,MAAMpC,sBAIfsC,eAAiB,SAAAC,GACD,UAAVA,EAAEC,KACJL,EAAKD,wFAIA,IACC1D,EAAgBoD,KAAKQ,MAArB5D,YACR,OACEiE,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,oBACbF,EAAAnC,EAAAoC,cAAA,SAAOE,IAAI,OAAOC,SAAUjB,KAAKQ,MAAMU,wBAAyBC,WAAYnB,KAAKU,eAAgBU,MAAOxE,EAAamE,UAAU,eAAeM,YAAY,cAC1JR,EAAAnC,EAAAoC,cAAA,KAAGQ,QAAStB,KAAKM,aAAcS,UAAU,uCApBzBQ,aA8BTC,cAJS,SAAAC,GAAK,MAAK,CAChC7E,YAAa6E,EAAMhC,cAAc7C,cAGK,CAACwB,mBAAkB8C,wBDRpD,SAAkCQ,GACvC,OAAO,SAAC7C,GACNA,EAAS,CAACW,KAAM3B,EAAeC,oBAAqB8B,QAAS8B,EAAMC,OAAOP,WCM/DI,CAAsEnB,GCnBtEuB,mLAVX,OACEf,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,oBACbF,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,sBAAd,eACAF,EAAAnC,EAAAoC,cAACe,EAAD,MACAhB,EAAAnC,EAAAoC,cAAA,MAAIC,UAAU,oBAAd,0BANaQ,aC6DNO,cA5Db,SAAAA,EAAatB,GAAO,IAAAD,EAAA,OAAAhC,OAAAwD,EAAA,EAAAxD,CAAAyB,KAAA8B,IAClBvB,EAAAhC,OAAAyD,EAAA,EAAAzD,CAAAyB,KAAAzB,OAAA0D,EAAA,EAAA1D,CAAAuD,GAAAI,KAAAlC,KAAMQ,KAOR2B,iBAAmB,WACjB5B,EAAK6B,SAAS7B,EAAK8B,mBATD9B,EAYpB+B,mBAAqB,WACnB/B,EAAK6B,SAAS7B,EAAKgC,sBAbDhC,EAgBpBiC,oBAAsB,WAAM,IAClBhF,EAAS+C,EAAKC,MAAdhD,KACFiF,EAAKC,SAAS5B,cAAc,YAClC2B,EAAGrB,MAAQ5D,EAAKR,IAChB0F,SAASC,KAAKC,YAAYH,GAC1BA,EAAGI,SACHH,SAASI,YAAY,QACrBJ,SAASC,KAAKI,YAAYN,IAvBRlC,EA0BpB8B,iBAAmB,SAACZ,GAClB,MAAO,CACLuB,OAAQvB,EAAMuB,QA5BEzC,EAgCpBgC,oBAAsB,SAACd,GACrB,MAAO,CACLwB,UAAWxB,EAAMwB,WAhCnB1C,EAAKkB,MAAQ,CACXuB,OAAO,EACPC,UAAU,GAJM1C,wEAsCX,IACC/C,EAASwC,KAAKQ,MAAdhD,KADD0F,EAEqBlD,KAAKyB,MAAzBuB,EAFDE,EAECF,MAEFG,EAAc,CAAC,cAIrB,OAROD,EAEQD,UAIbE,EAAYC,KAAK,SAGjBvC,EAAAnC,EAAAoC,cAAA,OAAKuC,aAAcrD,KAAKmC,iBAAkBmB,aAActD,KAAKmC,iBAAkBpB,UAAU,qBACtFiC,GAASnC,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,iBACvBF,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,qBACbF,EAAAnC,EAAAoC,cAAA,KAAGQ,QAAStB,KAAKwC,oBAAqBzB,UAAU,eAChDF,EAAAnC,EAAAoC,cAAA,KAAGQ,QAAStB,KAAKsC,mBAAoBvB,UAAWoC,EAAYhG,KAAK,SAGrE0D,EAAAnC,EAAAoC,cAAA,OAAKyC,IAAG,UAAAtG,OAAYO,EAAKgG,IAAMzC,UAAU,MAAM0C,IAAKjG,EAAKkG,OAAOC,aAAa3G,cAxDhEuE,aCGfqC,6MAEJC,oBAAsB,WACpBtD,EAAKC,MAAMpC,kBAAiB,4EAGrB,IAAA0F,EAC8B9D,KAAKQ,MAAlCrB,EADD2E,EACC3E,QACF4E,GAFCD,EACUjE,gBACCV,GAAWA,aAAmB6E,OAAS7E,EAAQsB,QACjE,OACEI,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,mBAEbF,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,SACZ5B,EAAQ8E,IAAI,SAACC,EAAKC,GAAN,OAAgBtD,EAAAnC,EAAAoC,cAACsD,EAAD,CAAQxD,IAAKuD,EAAO3G,KAAM0G,OAEzDrD,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,kBACZgD,EACDlD,EAAAnC,EAAAoC,cAAA,OAAKQ,QAAStB,KAAK6D,oBAAqB9C,UAAU,eAChDF,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,gBAAf,kBACO,cAnBIQ,aA+BRC,cALS,SAAAC,GAAK,MAAK,CAChCtC,QAASsC,EAAM4C,WAAWlF,QAC1BU,gBAAiB4B,EAAM4C,WAAWxE,kBAGI,CAACzB,oBAA1BoD,CAA6CoC,GC/BtDU,mLACK,IACCnF,EAAYa,KAAKQ,MAAjBrB,QACR,OACE0B,EAAAnC,EAAAoC,cAAA,OAAKC,UAAU,OACbF,EAAAnC,EAAAoC,cAACyD,EAAD,MACCpF,EAAQsB,QAAUI,EAAAnC,EAAAoC,cAAC0D,EAAD,cANTjD,aAgBHC,cAJS,SAAAC,GAAK,MAAK,CAChCtC,QAASsC,EAAM4C,WAAWlF,UAGY,GAAzBqC,CAA6B8C,GCTxBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8FCfSC,cAAgB,CAC7BrF,cCFa,WAGD,IAHEgC,EAGFrB,UAAAK,OAAA,QAAAsE,IAAA3E,UAAA,GAAAA,UAAA,GAHU,CACtBxD,YAAa,GACb8C,WAAY,GACXsF,EAAW5E,UAAAK,OAAA,EAAAL,UAAA,QAAA2E,EACZ,OAAQC,EAAOxF,MACb,KAAK3B,EAAeC,oBAClB,OAAOS,OAAA0G,EAAA,EAAA1G,CAAA,GAAKkD,EAAZ,CACE7E,YAAaoI,EAAOpF,UAExB,KAAK/B,EAAeE,sBAClB,OAAOQ,OAAA0G,EAAA,EAAA1G,CAAA,GAAKkD,EAAZ,CACE/B,WAAY+B,EAAM/B,WAAa,IAEnC,KAAK7B,EAAeG,kBAClB,OAAOO,OAAA0G,EAAA,EAAA1G,CAAA,GAAKkD,EAAZ,CACE/B,WAAY,IAEhB,QACE,OAAO+B,IDfX4C,WEHF,WAGc,IAHE5C,EAGFrB,UAAAK,OAAA,QAAAsE,IAAA3E,UAAA,GAAAA,UAAA,GAHU,CACtBjB,QAAS,GACTU,gBAAiB,IAChBmF,EAAW5E,UAAAK,OAAA,EAAAL,UAAA,QAAA2E,EACZ,OAAQC,EAAOxF,MACb,KAAKvB,EAAiBC,YACpB,OAAOK,OAAA0G,EAAA,EAAA1G,CAAA,GAAKkD,EAAZ,CACEtC,QAAS6F,EAAOpF,QAAQT,QACxBU,gBAAiBmF,EAAOpF,QAAQC,kBAEpC,KAAK5B,EAAiBE,YACpB,OAAOI,OAAA0G,EAAA,EAAA1G,CAAA,GAAKkD,EAAZ,CACEtC,QAAQZ,OAAA2G,EAAA,EAAA3G,CAAKkD,EAAMtC,SAAZlC,OAAAsB,OAAA2G,EAAA,EAAA3G,CAAwByG,EAAOpF,QAAQT,UAC9CU,gBAAiBmF,EAAOpF,QAAQC,kBAEpC,QACE,OAAO4B,MCVb0D,IAASC,OACPvE,EAAAnC,EAAAoC,cAACuE,EAAA,EAAD,CAAUC,MCJHC,YACLC,EACAC,YAAgBC,ODGhB7E,EAAAnC,EAAAoC,cAAC6E,EAAD,OAEFjD,SAASkD,eAAe,SJqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzI,KAAK,SAAA0I,GACjCA,EAAaC","file":"static/js/main.52810cc8.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.giphy.com/v1/gifs';\nexport const GIPHY_API_KEY = 'Xc47ov5HBaQVCQFfHxnj4WpVIP2pZgmB';","import { BASE_URL, GIPHY_API_KEY} from '../config';\nimport axios from 'axios';\n\nexport default function searchGifsAPI (searchValue, page) {\n  const url = buildSearchUrl(searchValue, page);\n  return axios.get(url)\n  .then((response) => {\n    const { data } = response;\n    return data;\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n}\n\nfunction buildSearchUrl (s, p) {\n  const url = `${BASE_URL}/search?api_key=${GIPHY_API_KEY}&q=${s.split(' ').join('+')}&offset=${p*25}`;\n\n  return url;\n}","export const SEARCH_ACTIONS = {\n  UPDATE_SEARCH_VALUE: 'UPDATE_SEARCH_VALUE',\n  INCREMENT_PAGE_NUMBER: 'INCREMENT_PAGE_NUMBER',\n  CLEAR_PAGE_NUMBER: 'CLEAR_PAGE_NUMBER'\n}\n\nexport const GIF_DATA_ACTIONS = {\n  SEARCH_GIFS: 'SEARCH_GIFS',\n  APPEND_GIFS: 'APPEND_GIFS'\n}","import searchGifsAPI from '../apis/searchAPI';\nimport { SEARCH_ACTIONS, GIF_DATA_ACTIONS } from '../actions';\n\nexport function searchGifsAction (loadMore) {\n  return async (dispatch, getState) => {\n\n    if (loadMore) {\n      dispatch({ type: SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER });\n    } else {\n      dispatch({ type: SEARCH_ACTIONS.CLEAR_PAGE_NUMBER });\n    }\n\n    const currentState = getState();\n    const searchReducerData = currentState.searchReducer;\n    const currentPageValue = searchReducerData.pageNumber;\n    const currentSearchValue = searchReducerData.searchValue;\n    const gifData = await searchGifsAPI(currentSearchValue, currentPageValue);\n\n    if (loadMore) {\n      dispatch({ type: GIF_DATA_ACTIONS.APPEND_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n    } else {\n      dispatch({ type: GIF_DATA_ACTIONS.SEARCH_GIFS, payload: { gifData: gifData.data, gifPaginateData: gifData.pagination } });\n    }\n  };\n};\n\nexport function updateSearchValueAction (event) {\n  return (dispatch) => {\n    dispatch({type: SEARCH_ACTIONS.UPDATE_SEARCH_VALUE, payload: event.target.value});\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {searchGifsAction, updateSearchValueAction} from '../actions/searchActions';\n\nclass SearchBox extends Component {\n\n  submitSearch = () => {\n    const { searchValue } = this.props;\n    if (searchValue.length) {\n      this.props.searchGifsAction();\n    }\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.submitSearch();\n    }\n  }\n\n  render() {\n    const { searchValue } = this.props;\n    return (\n      <div className='search-container'>\n        <input tpe='text' onChange={this.props.updateSearchValueAction} onKeyPress={this.handleKeyPress} value={searchValue} className='search-input' placeholder='Search...' />\n        <i onClick={this.submitSearch} className='fa fa-search search-button'></i>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchValue: state.searchReducer.searchValue\n});\n\nexport default connect(mapStateToProps, {searchGifsAction, updateSearchValueAction})(SearchBox);\n\n","import React, { Component } from 'react';\nimport SearchBox from './SearchBox';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className='header-container'>\n        <h1 className='header-title title'>Its Not Jif</h1>\n        <SearchBox />\n        <h1 className='header-title fav'>View Favorites</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass GifBox extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      hover: false,\n      favorite: false\n    }\n  }\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  }\n\n  handleClickFavorte = () => {\n    this.setState(this.toggleFavoriteState);\n  }\n\n  handleClickCopyLink = () => {\n    const { data } = this.props;\n    const el = document.createElement('textarea');\n    el.value = data.url;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  }\n\n  toggleHoverState = (state) => {\n    return {\n      hover: !state.hover\n    }\n  }\n\n  toggleFavoriteState = (state) => {\n    return {\n      favorite: !state.favorite\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n    const { hover, favorite } = this.state;\n\n    const starClasses = ['fa fa-star'];\n    if (favorite) {\n      starClasses.push('isFav');\n    }\n    return (\n      <div onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover} className='gif-box-container'>\n        {hover && <div className='gif-hover-box'>\n          <div className='hover-box-buttons'>\n            <i onClick={this.handleClickCopyLink} className='fa fa-link'></i>\n            <i onClick={this.handleClickFavorte} className={starClasses.join(' ')}></i>\n          </div>\n        </div>}\n        <img alt={`gif-id-${data.id}`} className='gif' src={data.images.fixed_height.url} />\n      </div>\n    );\n  }\n}\n\nexport default GifBox;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GifBox from './GifBox';\nimport {searchGifsAction} from '../actions/searchActions';\n\nclass GifTable extends Component {\n\n  handleLoadMoreClick = () => {\n    this.props.searchGifsAction(true);\n  }\n\n  render() {\n    const { gifData, gifPaginateData } = this.props;\n    const showMore = (gifData && gifData instanceof Array && gifData.length);\n    return (\n      <div className='table-container'>\n        {/* <div className='table-meta'>Showing {gifPaginateData.count} of {gifPaginateData.total_count} </div> */}\n        <div className='table'>\n          {gifData.map((gif, index) => <GifBox key={index} data={gif} />)}\n        </div>\n        <div className='more-container'>\n          {showMore ?\n          <div onClick={this.handleLoadMoreClick} className='more-button'>\n            <div className='button-label'>Give me MORE!</div>\n          </div> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gifData: state.gifReducer.gifData,\n  gifPaginateData: state.gifReducer.gifPaginateData\n});\n\nexport default connect(mapStateToProps, {searchGifsAction})(GifTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport GifTable from './GifTable';\n\nclass App extends Component {\n  render() {\n    const { gifData } = this.props;\n    return (\n      <div className='App'>\n        <Header />\n        {gifData.length && <GifTable />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  gifData: state.gifReducer.gifData\n});\n\nexport default connect(mapStateToProps, {})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport searchReducer from './searchReducer';\nimport gifReducer from './gifReducer';\nexport default combineReducers({\n  searchReducer,\n  gifReducer\n});","import { SEARCH_ACTIONS } from '../actions';\n\nexport default (state = {\n  searchValue: '',\n  pageNumber: 1\n}, action) => {\n  switch (action.type) {\n    case SEARCH_ACTIONS.UPDATE_SEARCH_VALUE:\n      return { ...state,\n        searchValue: action.payload\n      }\n    case SEARCH_ACTIONS.INCREMENT_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: state.pageNumber + 1\n      }\n    case SEARCH_ACTIONS.CLEAR_PAGE_NUMBER:\n      return { ...state,\n        pageNumber: 1\n      }\n    default:\n      return state\n  }\n}","import { GIF_DATA_ACTIONS } from '../actions';\n\nexport default (state = {\n  gifData: [],\n  gifPaginateData: {}\n}, action) => {\n  switch (action.type) {\n    case GIF_DATA_ACTIONS.SEARCH_GIFS:\n      return { ...state,\n        gifData: action.payload.gifData,\n        gifPaginateData: action.payload.gifPaginateData\n      }\n    case GIF_DATA_ACTIONS.APPEND_GIFS:\n      return { ...state,\n        gifData: [...state.gifData, ...action.payload.gifData],\n        gifPaginateData: action.payload.gifPaginateData\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}"],"sourceRoot":""}